name: PR Validation Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      pr_ids:
        description: 'Lista de PR IDs simulados (["13","12"])'
        required: true
        default: '["local"]'

jobs:
  validate-pr:
    needs: security-scan
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        pr_id: ${{ github.event_name == 'workflow_dispatch'
                    && fromJson(inputs.pr_ids)
                    || fromJson('["local"]') }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Instalar dependencias
        run: |
          pip install pytest pytest-cov flake8 bandit
          sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Ejecutar linting
        run: |
          chmod +x ./scripts/lint_all.sh
          ./scripts/lint_all.sh

      - name: Ejecutar pruebas
        run: pytest --cov=src --cov=scripts --cov-fail-under=80

      - name: Preparar carpeta pr_simulation
        run: |
          mkdir -p pr_simulation/${{ matrix.pr_id }}

      - name: Ejecutar validacion (check_pr.py)
        run: |
          python3 scripts/check_pr.py

          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Configurar Python y herramientas
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Instalar Bandit y ShellCheck
        run: |
          pip install bandit
          sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Ejecutar Bandit
        id: bandit
        continue-on-error: true
        run: |
          bandit -r src/ \
            --format json \
            --severity-level high\
            -o bandit_report.json

      - name: Ejecutar ShellCheck
        id: shellcheck
        continue-on-error: true
        run: shellcheck scripts/*.sh

      - name: Verificar resultados y fallar si hay vulnerabilidades
        if: ${{ steps.bandit.outcome != 'success' || steps.shellcheck.outcome != 'success' }}
        run: |
          echo "Vulnerabilidades críticas detectadas por Bandit o ShellCheck"
          exit 1

